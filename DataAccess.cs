//This code was generated by a tool.
//Changes to this file will be lost if the code is regenerated.
// See the blog post here for help on using the generated code: http://erikej.blogspot.dk/2014/10/database-first-with-sqlite-in-universal.html
using System.Data.SQLite;
using System;

namespace First
{
    public class SQLiteDb
    {
        public string _path { get; set; }
        public SQLiteDb(string path)
        {
            _path = path;
            Connect();
        }

        public void Connect()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                try
                {
                    db.Open();
                }
                catch (Exception ex)
                {
                    Console.WriteLine("no connection");
                }
            }
        }

        public string ReadData(string stm)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                db.Open();
                SQLiteCommand sqlite_cmd = db.CreateCommand();
                sqlite_cmd.CommandText = stm;
                SQLiteDataReader dataReader = sqlite_cmd.ExecuteReader();
                dataReader.Read();
                string kanji = dataReader.GetString(0);
                return kanji;
            }
        }

        public void InsertData(string kanji, string answer = "")
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                db.Open();
                SQLiteCommand sqlite_cmd = db.CreateCommand();
                sqlite_cmd.CommandText = string.Format("INSERT INTO Items (kanji, repetition, easiness, interval, answer) VALUES(\"{0}\",0,0.0,0,\"{1}\"); ", kanji, answer);
                sqlite_cmd.ExecuteNonQuery();
            }
            
        }
    }

    public partial class Items
    {
        public String kanji { get; set; }
        
        public Int64 repition { get; set; }
        
        public Double easiness { get; set; }
        
        public Int64 interval { get; set; }
        
    }
    
}
